import scala.collection.mutable.ListBuffer


object DP145 extends App{
  
/*
 * 
 * @author sandeep-krp
 * Given the head of a singly linked list, swap every two nodes and return its head.
 * For example, given 1 -> 2 -> 3 -> 4, return 2 -> 1 -> 4 -> 3
 *
 */
  
  val inputList = List(1,2,3,4,5,6,7,8,9)
  
  println("1st element of list is ",inputList(0))
  println("Length of list is ",inputList.length)
  
  var FinalList = new ListBuffer[Int]()
  
  for(a <- 0 to inputList.length-1 by 2)
  {
    if(a+1 < inputList.length)
    {
    FinalList += inputList(a+1)
    }
    FinalList += inputList(a)
    
  }

  println("final List is",FinalList.toList)
  
}
